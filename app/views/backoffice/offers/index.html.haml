- model_class = Offer
.page-header
  %h1
    = t '.title', default: model_class.model_name.human.pluralize.titleize
    = link_to t('.new', default: t("helpers.links.new")), new_backoffice_offer_path, class: 'btn btn-primary'


%div
  %a.float_left(onclick="notify()") Notifica aggiornamenti:
  %p.margin_left.float_left= t('general_notification_content')
  =render partial: 'notification'

%table#sortable.table.table-bordered.table-striped
  %thead
    %tr
      %td= model_class.human_attribute_name(:title)
      %td= model_class.human_attribute_name(:price)
      %td= model_class.human_attribute_name(:original_price)
      %td= model_class.human_attribute_name(:merchant)
      %td= model_class.human_attribute_name(:telephone)
      %td= model_class.human_attribute_name(:email)
  %tbody
    - @offers.each do |offer|
      %tr.offer{"data-offer-id": offer.id}
        %td
          %h5= link_to offer.title, backoffice_offer_path(offer)
          %div
            = link_to t('.edit', default: t("helpers.links.edit")), edit_backoffice_offer_path(offer)
            |
            = link_to t('.preview', default: t("helpers.links.preview")) , backoffice_offer_path(offer)
            |
            = link_to t('.destroy', default: t("helpers.links.destroy")), backoffice_offer_path(offer), method: :delete, data: { confirm: t('.confirm', default: t("helpers.links.confirm", default: 'Are you sure?')) }
        %td= offer.price
        %td= offer.original_price
        %td= offer.merchant.name
        %td= offer.merchant.telephone
        %td= offer.merchant.email


:javascript
    function notify(){

        send_generic_notification("#{api_generic_notify_path}", "android|ios", function(result){
            if(result.android.status === "success" && result.ios.status === "success"){
                hide_android_error();
                hide_ios_error();
                alertSuccess();
            }else{
               hadle_error(result);
            }
        })
    }

    function notifyAndroid(){
        send_generic_notification("android", function(result){
            if(result.android.status === "success"){
               hide_android_error();
               alertSuccess();
            }else{
               hadle_error(result);
            }
        })
    }

    function notifyIos(){
        send_generic_notification("ios", function(result){
             if(result.ios.status === "success"){
                hide_ios_error();
                alertSuccess();
             }else{
                hadle_error(result);
             }
        });
    }

    function activate_drag_and_drop(){ 
      if( $('#sortable').length > 0 ){
        $('#sortable').sortable({
          axis: 'y',
          items: '.offer',
          cursor: 'move',
        

          sort: function(e, ui){
            ui.item.addClass('active-item-shadow')
          },

          stop: function(e, ui){
            ui.item.removeClass('active-item-shadow')
            // highlight the row on drop to indicate an update
            ui.item.children('td').effect('highlight', {}, 1000)
          },

          update: function(e, ui){
            var offer_id = ui.item.data('offer-id')
            console.log(offer_id)
            var position = ui.item.index() // this will not work with paginated offers, as the index is zero on every page
            $.ajax({
              type: 'POST',
              url: '/backoffice/offers/' + offer_id + '/update_row_order',
              dataType: 'json',
              data: { id: offer_id, row_order: position }
            });
          }
        }); 
 
      }
    }

    activate_drag_and_drop()

    

